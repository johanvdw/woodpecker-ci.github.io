"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[4476],{17942:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(50959);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},80134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>f,default:()=>N,frontMatter:()=>k,metadata:()=>h,toc:()=>v});var r=n(17942),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&p(e,n,t[n]);return e},d=(e,t)=>o(e,i(t)),m=(e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n};const k={},f="Kubernetes backend",h={unversionedId:"administration/backends/kubernetes",id:"administration/backends/kubernetes",title:"Kubernetes backend",description:"Not all pipeline features are fully supported yet for this backend.",source:"@site/docs/30-administration/22-backends/40-kubernetes.md",sourceDirName:"30-administration/22-backends",slug:"/administration/backends/kubernetes",permalink:"/docs/next/administration/backends/kubernetes",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/docs/30-administration/22-backends/40-kubernetes.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SSH backend",permalink:"/docs/next/administration/backends/ssh"},next:{title:"NixOS Deployment",permalink:"/docs/next/administration/backends/nixos"}},b={},v=[{value:"General Configuration",id:"general-configuration",level:2},{value:"Job specific configuration",id:"job-specific-configuration",level:2},{value:"Resources",id:"resources",level:3},{value:"serviceAccountName",id:"serviceaccountname",level:3},{value:"nodeSelector",id:"nodeselector",level:3},{value:"tolerations",id:"tolerations",level:3},{value:"Volumes",id:"volumes",level:3},{value:"Tips and tricks",id:"tips-and-tricks",level:2},{value:"CRI-O",id:"cri-o",level:3}],y={toc:v},g="wrapper";function N(e){var t=e,{components:n}=t,a=m(t,["components"]);return(0,r.kt)(g,d(u(u({},y),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",u({},{id:"kubernetes-backend"}),"Kubernetes backend"),(0,r.kt)("admonition",u({},{type:"info"}),(0,r.kt)("p",{parentName:"admonition"},"Not all pipeline features are fully supported yet for this backend.\nCheck ",(0,r.kt)("a",u({parentName:"p"},{href:"https://github.com/woodpecker-ci/woodpecker/issues/1513"}),"the Kubernetes overview issue")," for a summary.")),(0,r.kt)("p",null,"The kubernetes backend executes steps inside standalone pods. A temporary PVC is created for the lifetime of the pipeline to transfer files between steps."),(0,r.kt)("h2",u({},{id:"general-configuration"}),"General Configuration"),(0,r.kt)("p",null,"These env vars can be set in the ",(0,r.kt)("inlineCode",{parentName:"p"},"env:")," sections of both ",(0,r.kt)("inlineCode",{parentName:"p"},"server")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"agent"),".\nThey do not need to be set for both but only for the part to which it is relevant to."),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yml"}),'server:\n  env:\n    WOODPECKER_SESSION_EXPIRES: "300h"\n    [...]\n\nagent:\n  env:\n    [...]\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_NAMESPACE")," (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"woodpecker"),")"),(0,r.kt)("p",{parentName:"li"},"The namespace to create worker pods in.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_VOLUME_SIZE")," (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"10G"),")"),(0,r.kt)("p",{parentName:"li"},"The volume size of the pipeline volume.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_STORAGE_CLASS")," (default: empty)"),(0,r.kt)("p",{parentName:"li"},"The storage class to use for the pipeline volume.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_STORAGE_RWX")," (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),")"),(0,r.kt)("p",{parentName:"li"},"Determines if ",(0,r.kt)("inlineCode",{parentName:"p"},"RWX")," should be used for the pipeline volume's ",(0,r.kt)("a",u({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"}),"access mode"),". If false, ",(0,r.kt)("inlineCode",{parentName:"p"},"RWO")," is used instead.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_POD_LABELS")," (default: empty)"),(0,r.kt)("p",{parentName:"li"},"Additional labels to apply to worker pods. Must be a YAML object, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'{"example.com/test-label":"test-value"}'),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_POD_ANNOTATIONS")," (default: empty)"),(0,r.kt)("p",{parentName:"li"},"Additional annotations to apply to worker pods. Must be a YAML object, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'{"example.com/test-annotation":"test-value"}'),"."))),(0,r.kt)("h2",u({},{id:"job-specific-configuration"}),"Job specific configuration"),(0,r.kt)("h3",u({},{id:"resources"}),"Resources"),(0,r.kt)("p",null,"The kubernetes backend also allows for specifying requests and limits on a per-step basic, most commonly for CPU and memory.\nWe recommend to add a ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," definition to all steps to ensure efficient scheduling."),(0,r.kt)("p",null,"Here is an example definition with an arbitrary ",(0,r.kt)("inlineCode",{parentName:"p"},"resources")," definition below the ",(0,r.kt)("inlineCode",{parentName:"p"},"backend_options")," section:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yml"}),"steps:\n  'My kubernetes step':\n    image: alpine\n    commands:\n      - echo \"Hello world\"\n    backend_options:\n      kubernetes:\n        resources:\n          requests:\n            memory: 200Mi\n            cpu: 100m\n          limits:\n            memory: 400Mi\n            cpu: 1000m\n")),(0,r.kt)("h3",u({},{id:"serviceaccountname"}),"serviceAccountName"),(0,r.kt)("p",null,"Specify the name of the ServiceAccount which the build pod will mount. This serviceAccount must be created externally.\nSee the ",(0,r.kt)("a",u({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/security/service-accounts/"}),"kubernetes documentation")," for more information on using serviceAccounts."),(0,r.kt)("h3",u({},{id:"nodeselector"}),"nodeSelector"),(0,r.kt)("p",null,"Specifies the label which is used to select the node on which the job will be executed."),(0,r.kt)("p",null,"Labels defined here will be appended to a list which already contains ",(0,r.kt)("inlineCode",{parentName:"p"},'"kubernetes.io/arch"'),".\nBy default ",(0,r.kt)("inlineCode",{parentName:"p"},'"kubernetes.io/arch"')," is inferred from the agents' platform. One can override it by setting that label in the ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeSelector")," section of the ",(0,r.kt)("inlineCode",{parentName:"p"},"backend_options"),".\nWithout a manual overwrite, builds will be randomly assigned to the runners and inherit their respective architectures."),(0,r.kt)("p",null,"To overwrite this, one needs to set the label in the ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeSelector")," section of the ",(0,r.kt)("inlineCode",{parentName:"p"},"backend_options"),".\nA practical example for this is when running a matrix-build and delegating specific elements of the matrix to run on a specific architecture.\nIn this case, one must define an arbitrary key in the matrix section of the respective matrix element:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yml"}),"matrix:\n  include:\n    - NAME: runner1\n      ARCH: arm64\n")),(0,r.kt)("p",null,"And then overwrite the ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeSelector")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"backend_options")," section of the step(s) using the name of the respective env var:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yml"}),'[...]\n    backend_options:\n      kubernetes:\n        nodeSelector:\n          kubernetes.io/arch: "${ARCH}"\n')),(0,r.kt)("h3",u({},{id:"tolerations"}),"tolerations"),(0,r.kt)("p",null,"When you use nodeSelector and the node pool is configured with Taints, you need to specify the Tolerations. Tolerations allow the scheduler to schedule pods with matching taints.\nSee the ",(0,r.kt)("a",u({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/"}),"kubernetes documentation")," for more information on using tolerations."),(0,r.kt)("p",null,"Example pipeline configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yaml"}),'steps:\n  build:\n    image: golang\n    commands:\n      - go get\n      - go build\n      - go test\n    backend_options:\n      kubernetes:\n        serviceAccountName: \'my-service-account\'\n        resources:\n          requests:\n            memory: 128Mi\n            cpu: 1000m\n          limits:\n            memory: 256Mi\n        nodeSelector:\n          beta.kubernetes.io/instance-type: p3.8xlarge\n        tolerations:\n        - key: "key1"\n          operator: "Equal"\n          value: "value1"\n          effect: "NoSchedule"\n          tolerationSeconds: 3600\n')),(0,r.kt)("h3",u({},{id:"volumes"}),"Volumes"),(0,r.kt)("p",null,"To mount volumes a persistent volume (PV) and persistent volume claim (PVC) are needed on the cluster which can be referenced in steps via the ",(0,r.kt)("inlineCode",{parentName:"p"},"volume:"),' option.\nAssuming a PVC named "woodpecker-cache" exists, it can be referenced as follows in a step:'),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yaml"}),'steps:\n  "Restore Cache":\n    image: meltwater/drone-cache\n    volumes:\n      - woodpecker-cache:/woodpecker/src/cache\n    settings:\n      mount:\n        - "woodpecker-cache"\n    [...]\n')),(0,r.kt)("h2",u({},{id:"tips-and-tricks"}),"Tips and tricks"),(0,r.kt)("h3",u({},{id:"cri-o"}),"CRI-O"),(0,r.kt)("p",null,"CRI-O users currently need to configure the workspace for all workflows in order for them to run correctly. Add the following at the beginning of your configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-yml"}),'workspace:\n  base: "/woodpecker"\n  path: "/"\n')),(0,r.kt)("p",null,"See ",(0,r.kt)("a",u({parentName:"p"},{href:"https://github.com/woodpecker-ci/woodpecker/issues/2510"}),"this issue")," for more details."))}N.isMDXComponent=!0}}]);