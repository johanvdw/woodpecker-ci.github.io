"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[18],{17942:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var o=t(50959);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=o.createContext({}),s=function(e){var r=o.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=s(e.components);return o.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},m=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(t),m=n,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return t?o.createElement(f,c(c({ref:r},u),{},{components:t})):o.createElement(f,c({ref:r},u))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,c=new Array(a);c[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[p]="string"==typeof e?e:n,c[1]=i;for(var s=2;s<a;s++)c[s]=t[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},11967:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>E,contentTitle:()=>y,default:()=>k,frontMatter:()=>f,metadata:()=>O,toc:()=>b});var o=t(17942),n=Object.defineProperty,a=Object.defineProperties,c=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(e,r,t)=>r in e?n(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,p=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&u(e,t,r[t]);if(i)for(var t of i(r))s.call(r,t)&&u(e,t,r[t]);return e},d=(e,r)=>a(e,c(r)),m=(e,r)=>{var t={};for(var o in e)l.call(e,o)&&r.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&i)for(var o of i(e))r.indexOf(o)<0&&s.call(e,o)&&(t[o]=e[o]);return t};const f={},y="Autoscaler",O={unversionedId:"administration/autoscaler",id:"administration/autoscaler",title:"Autoscaler",description:"If your would like dynamically scale your agents with the load, you can use our autoscaler.",source:"@site/docs/30-administration/80-autoscaler.md",sourceDirName:"30-administration",slug:"/administration/autoscaler",permalink:"/docs/next/administration/autoscaler",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/docs/30-administration/80-autoscaler.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Proxy",permalink:"/docs/next/administration/proxy"},next:{title:"Prometheus",permalink:"/docs/next/administration/prometheus"}},E={},b=[{value:"Setup",id:"setup",level:2},{value:"docker-compose",id:"docker-compose",level:3}],h={toc:b},v="wrapper";function k(e){var r=e,{components:t}=r,n=m(r,["components"]);return(0,o.kt)(v,d(p(p({},h),n),{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",p({},{id:"autoscaler"}),"Autoscaler"),(0,o.kt)("p",null,"If your would like dynamically scale your agents with the load, you can use ",(0,o.kt)("a",p({parentName:"p"},{href:"https://github.com/woodpecker-ci/autoscaler"}),"our autoscaler"),"."),(0,o.kt)("p",null,"Please note that the autoscaler is not feature-complete yet. You can follow the progress ",(0,o.kt)("a",p({parentName:"p"},{href:"https://github.com/woodpecker-ci/autoscaler#roadmap"}),"here"),"."),(0,o.kt)("h2",p({},{id:"setup"}),"Setup"),(0,o.kt)("h3",p({},{id:"docker-compose"}),"docker-compose"),(0,o.kt)("p",null,"If you are using docker-compose you can add the following to your docker-compose.yml file:"),(0,o.kt)("pre",null,(0,o.kt)("code",p({parentName:"pre"},{className:"language-yaml"}),"version: '3'\n\nservices:\n  woodpecker-server:\n    image: woodpeckerci/woodpecker-server:next\n    [...]\n\n  woodpecker-autoscaler:\n    image: woodpeckerci/autoscaler:next\n    restart: always\n    depends_on:\n      - woodpecker-server\n    environment:\n      - WOODPECKER_SERVER=https://your-woodpecker-server.tld # the url of your woodpecker server / could also be a public url\n      - WOODPECKER_TOKEN=${WOODPECKER_TOKEN} # the api token you can get from the UI https://your-woodpecker-server.tld/user\n      - WOODPECKER_MIN_AGENTS=0\n      - WOODPECKER_MAX_AGENTS=3\n      - WOODPECKER_WORKFLOWS_PER_AGENT=2 # the number of workflows each agent can run at the same time\n      - WOODEPCKER_GRPC_ADDR=https://grpc.your-woodpecker-server.tld # the grpc address of your woodpecker server, publicly accessible from the agents\n      - WOODEPCKER_GRPC_SECURE=true\n      - WOODPECKER_AGENT_ENV= # optional environment variables to pass to the agents\n      - WOODPECKER_PROVIDER=hetznercloud # set the provider, you can find all the available ones down below\n      - WOODPECKER_HETZNERCLOUD_API_TOKEN=${WOODPECKER_HETZNERCLOUD_API_TOKEN} # your api token for the Hetzner cloud\n")))}k.isMDXComponent=!0}}]);