"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[7158],{17942:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>_});var n=o(50959);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=c(o),u=a,_=s["".concat(p,".").concat(u)]||s[u]||k[u]||r;return o?n.createElement(_,l(l({ref:t},d),{},{components:o})):n.createElement(_,l({ref:t},d))}));function _(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,l=new Array(r);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<r;c++)l[c]=o[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},99154:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>O,contentTitle:()=>m,default:()=>v,frontMatter:()=>_,metadata:()=>E,toc:()=>C});var n=o(17942),a=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,d=(e,t,o)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,s=(e,t)=>{for(var o in t||(t={}))p.call(t,o)&&d(e,o,t[o]);if(i)for(var o of i(t))c.call(t,o)&&d(e,o,t[o]);return e},k=(e,t)=>r(e,l(t)),u=(e,t)=>{var o={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&c.call(e,n)&&(o[n]=e[n]);return o};const _={},m="Server configuration",E={unversionedId:"administration/server-config",id:"administration/server-config",title:"Server configuration",description:"User registration",source:"@site/docs/30-administration/10-server-config.md",sourceDirName:"30-administration",slug:"/administration/server-config",permalink:"/docs/next/administration/server-config",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/docs/30-administration/10-server-config.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NixOS",permalink:"/docs/next/administration/deployment/nixos"},next:{title:"Overview",permalink:"/docs/next/administration/forges/overview"}},O={},C=[{value:"User registration",id:"user-registration",level:2},{value:"To close registration, but allow specific admin users",id:"to-close-registration-but-allow-specific-admin-users",level:3},{value:"To only allow registration of users, who are members of approved organizations",id:"to-only-allow-registration-of-users-who-are-members-of-approved-organizations",level:3},{value:"Administrators",id:"administrators",level:2},{value:"Filtering repositories",id:"filtering-repositories",level:2},{value:"Global registry setting",id:"global-registry-setting",level:2},{value:"Handling sensitive data in docker-compose and docker-swarm",id:"handling-sensitive-data-in-docker-compose-and-docker-swarm",level:2},{value:"Custom Javascript and CSS Styling (a.k.a. white-labeling)",id:"custom-javascript-and-css-styling-aka-white-labeling",level:2},{value:"woodpecker.css",id:"woodpeckercss",level:3},{value:"woodpecker.js",id:"woodpeckerjs",level:3},{value:"All server configuration options",id:"all-server-configuration-options",level:2},{value:"<code>WOODPECKER_LOG_LEVEL</code>",id:"woodpecker_log_level",level:3},{value:"<code>WOODPECKER_LOG_XORM</code>",id:"woodpecker_log_xorm",level:3},{value:"<code>WOODPECKER_LOG_XORM_SQL</code>",id:"woodpecker_log_xorm_sql",level:3},{value:"<code>WOODPECKER_DEBUG_PRETTY</code>",id:"woodpecker_debug_pretty",level:3},{value:"<code>WOODPECKER_DEBUG_NOCOLOR</code>",id:"woodpecker_debug_nocolor",level:3},{value:"<code>WOODPECKER_HOST</code>",id:"woodpecker_host",level:3},{value:"<code>WOODPECKER_WEBHOOK_HOST</code>",id:"woodpecker_webhook_host",level:3},{value:"<code>WOODPECKER_SERVER_ADDR</code>",id:"woodpecker_server_addr",level:3},{value:"<code>WOODPECKER_SERVER_ADDR_TLS</code>",id:"woodpecker_server_addr_tls",level:3},{value:"<code>WOODPECKER_SERVER_CERT</code>",id:"woodpecker_server_cert",level:3},{value:"<code>WOODPECKER_SERVER_KEY</code>",id:"woodpecker_server_key",level:3},{value:"<code>WOODPECKER_CUSTOM_CSS_FILE</code>",id:"woodpecker_custom_css_file",level:3},{value:"<code>WOODPECKER_CUSTOM_JS_FILE</code>",id:"woodpecker_custom_js_file",level:3},{value:"<code>WOODPECKER_LETS_ENCRYPT</code>",id:"woodpecker_lets_encrypt",level:3},{value:"<code>WOODPECKER_GRPC_ADDR</code>",id:"woodpecker_grpc_addr",level:3},{value:"<code>WOODPECKER_GRPC_SECRET</code>",id:"woodpecker_grpc_secret",level:3},{value:"<code>WOODPECKER_GRPC_SECRET_FILE</code>",id:"woodpecker_grpc_secret_file",level:3},{value:"<code>WOODPECKER_METRICS_SERVER_ADDR</code>",id:"woodpecker_metrics_server_addr",level:3},{value:"<code>WOODPECKER_ADMIN</code>",id:"woodpecker_admin",level:3},{value:"<code>WOODPECKER_ORGS</code>",id:"woodpecker_orgs",level:3},{value:"<code>WOODPECKER_REPO_OWNERS</code>",id:"woodpecker_repo_owners",level:3},{value:"<code>WOODPECKER_OPEN</code>",id:"woodpecker_open",level:3},{value:"<code>WOODPECKER_AUTHENTICATE_PUBLIC_REPOS</code>",id:"woodpecker_authenticate_public_repos",level:3},{value:"<code>WOODPECKER_DEFAULT_CANCEL_PREVIOUS_PIPELINE_EVENTS</code>",id:"woodpecker_default_cancel_previous_pipeline_events",level:3},{value:"<code>WOODPECKER_DEFAULT_CLONE_IMAGE</code>",id:"woodpecker_default_clone_image",level:3},{value:"<code>WOODPECKER_DEFAULT_PIPELINE_TIMEOUT</code>",id:"woodpecker_default_pipeline_timeout",level:3},{value:"<code>WOODPECKER_MAX_PIPELINE_TIMEOUT</code>",id:"woodpecker_max_pipeline_timeout",level:3},{value:"<code>WOODPECKER_SESSION_EXPIRES</code>",id:"woodpecker_session_expires",level:3},{value:"<code>WOODPECKER_ESCALATE</code>",id:"woodpecker_escalate",level:3},{value:"<code>WOODPECKER_DOCKER_CONFIG</code>",id:"woodpecker_docker_config",level:3},{value:"<code>WOODPECKER_AGENT_SECRET</code>",id:"woodpecker_agent_secret",level:3},{value:"<code>WOODPECKER_AGENT_SECRET_FILE</code>",id:"woodpecker_agent_secret_file",level:3},{value:"<code>WOODPECKER_KEEPALIVE_MIN_TIME</code>",id:"woodpecker_keepalive_min_time",level:3},{value:"<code>WOODPECKER_DATABASE_DRIVER</code>",id:"woodpecker_database_driver",level:3},{value:"<code>WOODPECKER_DATABASE_DATASOURCE</code>",id:"woodpecker_database_datasource",level:3},{value:"<code>WOODPECKER_DATABASE_DATASOURCE_FILE</code>",id:"woodpecker_database_datasource_file",level:3},{value:"<code>WOODPECKER_ENCRYPTION_KEY</code>",id:"woodpecker_encryption_key",level:3},{value:"<code>WOODPECKER_ENCRYPTION_KEY_FILE</code>",id:"woodpecker_encryption_key_file",level:3},{value:"<code>WOODPECKER_ENCRYPTION_TINK_KEYSET_FILE</code>",id:"woodpecker_encryption_tink_keyset_file",level:3},{value:"<code>WOODPECKER_ENCRYPTION_DISABLE</code>",id:"woodpecker_encryption_disable",level:3},{value:"<code>WOODPECKER_PROMETHEUS_AUTH_TOKEN</code>",id:"woodpecker_prometheus_auth_token",level:3},{value:"<code>WOODPECKER_PROMETHEUS_AUTH_TOKEN_FILE</code>",id:"woodpecker_prometheus_auth_token_file",level:3},{value:"<code>WOODPECKER_STATUS_CONTEXT</code>",id:"woodpecker_status_context",level:3},{value:"<code>WOODPECKER_STATUS_CONTEXT_FORMAT</code>",id:"woodpecker_status_context_format",level:3},{value:"<code>WOODPECKER_LIMIT_MEM_SWAP</code>",id:"woodpecker_limit_mem_swap",level:3},{value:"<code>WOODPECKER_LIMIT_MEM</code>",id:"woodpecker_limit_mem",level:3},{value:"<code>WOODPECKER_LIMIT_SHM_SIZE</code>",id:"woodpecker_limit_shm_size",level:3},{value:"<code>WOODPECKER_LIMIT_CPU_QUOTA</code>",id:"woodpecker_limit_cpu_quota",level:3},{value:"<code>WOODPECKER_LIMIT_CPU_SHARES</code>",id:"woodpecker_limit_cpu_shares",level:3},{value:"<code>WOODPECKER_LIMIT_CPU_SET</code>",id:"woodpecker_limit_cpu_set",level:3},{value:"<code>WOODPECKER_CONFIG_SERVICE_ENDPOINT</code>",id:"woodpecker_config_service_endpoint",level:3},{value:"<code>WOODPECKER_FORGE_TIMEOUT</code>",id:"woodpecker_forge_timeout",level:3},{value:"<code>WOODPECKER_ROOT_PATH</code>",id:"woodpecker_root_path",level:3},{value:"<code>WOODPECKER_ENABLE_SWAGGER</code>",id:"woodpecker_enable_swagger",level:3},{value:"<code>WOODPECKER_GITHUB_...</code>",id:"woodpecker_github_",level:3},{value:"<code>WOODPECKER_GITEA_...</code>",id:"woodpecker_gitea_",level:3},{value:"<code>WOODPECKER_BITBUCKET_...</code>",id:"woodpecker_bitbucket_",level:3},{value:"<code>WOODPECKER_GITLAB_...</code>",id:"woodpecker_gitlab_",level:3}],h={toc:C},f="wrapper";function v(e){var t=e,{components:o}=t,a=u(t,["components"]);return(0,n.kt)(f,k(s(s({},h),a),{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",s({},{id:"server-configuration"}),"Server configuration"),(0,n.kt)("h2",s({},{id:"user-registration"}),"User registration"),(0,n.kt)("p",null,"Woodpecker does not have its own user registry; users are provided from your ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/administration/forges/overview"}),"forge")," (using OAuth2)."),(0,n.kt)("p",null,"Registration is closed by default (",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_OPEN=false"),"). If registration is open (",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_OPEN=true"),") then every user with an account at the configured forge can login to Woodpecker."),(0,n.kt)("p",null,"To open registration:"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_OPEN=true\n")),(0,n.kt)("p",null,"You can ",(0,n.kt)("strong",{parentName:"p"},"also restrict")," registration, by keep registration closed and ...\\\n... ",(0,n.kt)("strong",{parentName:"p"},"adding")," new ",(0,n.kt)("strong",{parentName:"p"},"users manually")," via the CLI: ",(0,n.kt)("inlineCode",{parentName:"p"},"woodpecker-cli user add"),", or\\\n... allowing specific ",(0,n.kt)("strong",{parentName:"p"},"admin users")," via the ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ADMIN")," setting, or\\\nby open registration and ",(0,n.kt)("strong",{parentName:"p"},"filter by organization")," membership through the ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ORGS")," setting."),(0,n.kt)("h3",s({},{id:"to-close-registration-but-allow-specific-admin-users"}),"To close registration, but allow specific admin users"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_OPEN=false\n+     - WOODPECKER_ADMIN=johnsmith,janedoe\n")),(0,n.kt)("h3",s({},{id:"to-only-allow-registration-of-users-who-are-members-of-approved-organizations"}),"To only allow registration of users, who are members of approved organizations"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_OPEN=true\n+     - WOODPECKER_ORGS=dolores,dogpatch\n")),(0,n.kt)("h2",s({},{id:"administrators"}),"Administrators"),(0,n.kt)("p",null,"Administrators should also be enumerated in your configuration."),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_ADMIN=johnsmith,janedoe\n")),(0,n.kt)("h2",s({},{id:"filtering-repositories"}),"Filtering repositories"),(0,n.kt)("p",null,"Woodpecker operates with the user's OAuth permission. Due to the coarse permission handling of GitHub, you may end up syncing more repos into Woodpecker than preferred."),(0,n.kt)("p",null,"Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_REPO_OWNERS")," variable to filter which GitHub user's repos should be synced only. You typically want to put here your company's GitHub name."),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_REPO_OWNERS=mycompany,mycompanyossgithubuser\n")),(0,n.kt)("h2",s({},{id:"global-registry-setting"}),"Global registry setting"),(0,n.kt)("p",null,"If you want to make available a specific private registry to all pipelines, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_DOCKER_CONFIG")," server configuration.\nPoint it to your server's docker config."),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    volumes:\n      - [...]\n+     - /home/user/.docker/config.json:/root/.docker/config.json:ro\n    environment:\n      - [...]\n+     - WOODPECKER_DOCKER_CONFIG=/root/.docker/config.json\n")),(0,n.kt)("h2",s({},{id:"handling-sensitive-data-in-docker-compose-and-docker-swarm"}),"Handling sensitive data in docker-compose and docker-swarm"),(0,n.kt)("p",null,"To handle sensitive data in docker-compose or docker-swarm configurations there are several options:"),(0,n.kt)("p",null,"For docker-compose you can use a .env file next to your compose configuration to store the secrets outside of the compose file. While this separates configuration from secrets it is still not very secure."),(0,n.kt)("p",null,"Alternatively use docker-secrets. As it may be difficult to use docker secrets for environment variables woodpecker allows to read sensible data from files by providing a ",(0,n.kt)("inlineCode",{parentName:"p"},"*_FILE")," option of all sensible configuration variables. Woodpecker will try to read the value directly from this file. Keep in mind that when the original environment variable gets specified at the same time it will override the value read from the file."),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_AGENT_SECRET_FILE=/run/secrets/woodpecker-agent-secret\n+   secrets:\n+     - woodpecker-agent-secret\n+\n+secrets:\n+  woodpecker-agent-secret:\n+    external: true\n")),(0,n.kt)("p",null,"Store a value to a docker secret like this:\n",(0,n.kt)("inlineCode",{parentName:"p"},'echo "my_agent_secret_key" | docker secret create woodpecker-agent-secret -')),(0,n.kt)("p",null,"or generate a random one like this:"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"openssl rand -hex 32 | docker secret create woodpecker-agent-secret -")),(0,n.kt)("h2",s({},{id:"custom-javascript-and-css-styling-aka-white-labeling"}),"Custom Javascript and CSS Styling (a.k.a. white-labeling)"),(0,n.kt)("p",null,"Woodpecker supports custom styling of the Web UI by providing custom JS and CSS files.\nThese files must be present in the server's filesystem.\nThey can be backed in a Docker image or mounted from a ConfigMap inside a Kubernetes environment.\nThe configuration variables are independent of each other, which means it can be just one file present, or both."),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-text"}),"WOODPECKER_CUSTOM_CSS_FILE=/usr/local/www/woodpecker.css\nWOODPECKER_CUSTOM_CSS_FILE=/usr/local/www/woodpecker.js\n")),(0,n.kt)("p",null,"The examples below show how to place a banner message in the top navigation bar of Woodpecker."),(0,n.kt)("h3",s({},{id:"woodpeckercss"}),"woodpecker.css"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-css"}),".banner-message {\n  position: absolute;\n  width: 280px;\n  height: 40px;\n  margin-left: 240px;\n  margin-top: 5px;\n  padding-top: 5px;\n  font-weight: bold;\n  background: red no-repeat;\n  text-align: center;\n}\n")),(0,n.kt)("h3",s({},{id:"woodpeckerjs"}),"woodpecker.js"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-javascript"}),"// place/copy a minified version of jQuery or ZeptoJS here ...\n!(function () {\n  'use strict';\n  function e() {} /*...*/\n})();\n\n$().ready(function () {\n  $('.app nav img').first().htmlAfter(\"<div class='banner-message'>This is a demo banner message :)</div>\");\n});\n")),(0,n.kt)("h2",s({},{id:"all-server-configuration-options"}),"All server configuration options"),(0,n.kt)("p",null,"The following list describes all available server configuration options."),(0,n.kt)("h3",s({},{id:"woodpecker_log_level"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LOG_LEVEL")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Configures the logging level. Possible values are ",(0,n.kt)("inlineCode",{parentName:"p"},"trace"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"warn"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"error"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"fatal"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"panic"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"disabled")," and empty."),(0,n.kt)("h3",s({},{id:"woodpecker_log_xorm"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LOG_XORM")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"false"))),(0,n.kt)("p",null,"Enable XORM logs."),(0,n.kt)("h3",s({},{id:"woodpecker_log_xorm_sql"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LOG_XORM_SQL")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"false"))),(0,n.kt)("p",null,"Enable XORM SQL command logs."),(0,n.kt)("h3",s({},{id:"woodpecker_debug_pretty"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DEBUG_PRETTY")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"false"))),(0,n.kt)("p",null,"Enable pretty-printed debug output."),(0,n.kt)("h3",s({},{id:"woodpecker_debug_nocolor"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DEBUG_NOCOLOR")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"true"))),(0,n.kt)("p",null,"Disable colored debug output."),(0,n.kt)("h3",s({},{id:"woodpecker_host"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_HOST")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Server fully qualified URL of the user-facing hostname and path prefix."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_HOST=http://woodpecker.example.org")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_HOST=http://example.org/woodpecker")),(0,n.kt)("h3",s({},{id:"woodpecker_webhook_host"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_WEBHOOK_HOST")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: value from ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_HOST")," config env")),(0,n.kt)("p",null,"Server fully qualified URL of the Webhook-facing hostname and path prefix."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_WEBHOOK_HOST=http://woodpecker-server.cicd.svc.cluster.local:8000")),(0,n.kt)("h3",s({},{id:"woodpecker_server_addr"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_SERVER_ADDR")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},":8000"))),(0,n.kt)("p",null,"Configures the HTTP listener port."),(0,n.kt)("h3",s({},{id:"woodpecker_server_addr_tls"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_SERVER_ADDR_TLS")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},":443"))),(0,n.kt)("p",null,"Configures the HTTPS listener port when SSL is enabled."),(0,n.kt)("h3",s({},{id:"woodpecker_server_cert"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_SERVER_CERT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Path to an SSL certificate used by the server to accept HTTPS requests."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_SERVER_CERT=/path/to/cert.pem")),(0,n.kt)("h3",s({},{id:"woodpecker_server_key"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_SERVER_KEY")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Path to an SSL certificate key used by the server to accept HTTPS requests."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_SERVER_KEY=/path/to/key.pem")),(0,n.kt)("h3",s({},{id:"woodpecker_custom_css_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_CUSTOM_CSS_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"File path for the server to serve a custom .CSS file, used for customizing the UI.\nCan be used for showing banner messages, logos, or environment-specific hints (a.k.a. white-labeling).\nThe file must be UTF-8 encoded, to ensure all special characters are preserved."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_CUSTOM_CSS_FILE=/usr/local/www/woodpecker.css")),(0,n.kt)("h3",s({},{id:"woodpecker_custom_js_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_CUSTOM_JS_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"File path for the server to serve a custom .JS file, used for customizing the UI.\nCan be used for showing banner messages, logos, or environment-specific hints (a.k.a. white-labeling).\nThe file must be UTF-8 encoded, to ensure all special characters are preserved."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_CUSTOM_JS_FILE=/usr/local/www/woodpecker.js")),(0,n.kt)("h3",s({},{id:"woodpecker_lets_encrypt"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LETS_ENCRYPT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"false"))),(0,n.kt)("p",null,"Automatically generates an SSL certificate using Let's Encrypt, and configures the server to accept HTTPS requests."),(0,n.kt)("h3",s({},{id:"woodpecker_grpc_addr"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GRPC_ADDR")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},":9000"))),(0,n.kt)("p",null,"Configures the gRPC listener port."),(0,n.kt)("h3",s({},{id:"woodpecker_grpc_secret"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GRPC_SECRET")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"secret"))),(0,n.kt)("p",null,"Configures the gRPC JWT secret."),(0,n.kt)("h3",s({},{id:"woodpecker_grpc_secret_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GRPC_SECRET_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Read the value for ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_GRPC_SECRET")," from the specified filepath."),(0,n.kt)("h3",s({},{id:"woodpecker_metrics_server_addr"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_METRICS_SERVER_ADDR")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Configures an unprotected metrics endpoint. An empty value disables the metrics endpoint completely."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},":9001")),(0,n.kt)("h3",s({},{id:"woodpecker_admin"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ADMIN")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Comma-separated list of admin accounts."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ADMIN=user1,user2")),(0,n.kt)("h3",s({},{id:"woodpecker_orgs"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ORGS")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Comma-separated list of approved organizations."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"org1,org2")),(0,n.kt)("h3",s({},{id:"woodpecker_repo_owners"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_REPO_OWNERS")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Comma-separated list of syncable repo owners. ???"),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"user1,user2")),(0,n.kt)("h3",s({},{id:"woodpecker_open"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_OPEN")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"false"))),(0,n.kt)("p",null,"Enable to allow user registration."),(0,n.kt)("h3",s({},{id:"woodpecker_authenticate_public_repos"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_AUTHENTICATE_PUBLIC_REPOS")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"false"))),(0,n.kt)("p",null,"Always use authentication to clone repositories even if they are public. Needed if the forge requires to always authenticate as used by many companies."),(0,n.kt)("h3",s({},{id:"woodpecker_default_cancel_previous_pipeline_events"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DEFAULT_CANCEL_PREVIOUS_PIPELINE_EVENTS")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"pull_request, push"))),(0,n.kt)("p",null,"List of event names that will be canceled when a new pipeline for the same context (tag, branch) is created."),(0,n.kt)("h3",s({},{id:"woodpecker_default_clone_image"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DEFAULT_CLONE_IMAGE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default is defined in ",(0,n.kt)("a",s({parentName:"p"},{href:"https://github.com/woodpecker-ci/woodpecker/blob/main/shared/constant/constant.go"}),"shared/constant/constant.go"))),(0,n.kt)("p",null,"The default docker image to be used when cloning the repo"),(0,n.kt)("h3",s({},{id:"woodpecker_default_pipeline_timeout"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DEFAULT_PIPELINE_TIMEOUT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"60 (minutes)")),(0,n.kt)("p",null,"The default time for a repo in minutes before a pipeline gets killed"),(0,n.kt)("h3",s({},{id:"woodpecker_max_pipeline_timeout"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_MAX_PIPELINE_TIMEOUT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"120 (minutes)")),(0,n.kt)("p",null,"The maximum time in minutes you can set in the repo settings before a pipeline gets killed"),(0,n.kt)("h3",s({},{id:"woodpecker_session_expires"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_SESSION_EXPIRES")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"72h"))),(0,n.kt)("p",null,"Configures the session expiration time.\nContext: when someone does log into Woodpecker, a temporary session token is created.\nAs long as the session is valid (until it expires or log-out),\na user can log into Woodpecker, without re-authentication."),(0,n.kt)("h3",s({},{id:"woodpecker_escalate"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ESCALATE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Defaults are defined in ",(0,n.kt)("a",s({parentName:"p"},{href:"https://github.com/woodpecker-ci/woodpecker/blob/main/shared/constant/constant.go"}),"shared/constant/constant.go"))),(0,n.kt)("p",null,"Docker images to run in privileged mode. Only change if you are sure what you do!"),(0,n.kt)("h3",s({},{id:"woodpecker_docker_config"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DOCKER_CONFIG")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Configures a specific private registry config for all pipelines."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_DOCKER_CONFIG=/home/user/.docker/config.json")),(0,n.kt)("h3",s({},{id:"woodpecker_agent_secret"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_AGENT_SECRET")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"A shared secret used by server and agents to authenticate communication. A secret can be generated by ",(0,n.kt)("inlineCode",{parentName:"p"},"openssl rand -hex 32"),"."),(0,n.kt)("h3",s({},{id:"woodpecker_agent_secret_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_AGENT_SECRET_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Read the value for ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_AGENT_SECRET")," from the specified filepath"),(0,n.kt)("h3",s({},{id:"woodpecker_keepalive_min_time"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_KEEPALIVE_MIN_TIME")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Server-side enforcement policy on the minimum amount of time a client should wait before sending a keepalive ping."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_KEEPALIVE_MIN_TIME=10s")),(0,n.kt)("h3",s({},{id:"woodpecker_database_driver"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DATABASE_DRIVER")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"sqlite3"))),(0,n.kt)("p",null,"The database driver name. Possible values are ",(0,n.kt)("inlineCode",{parentName:"p"},"sqlite3"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"mysql")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"postgres"),"."),(0,n.kt)("h3",s({},{id:"woodpecker_database_datasource"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DATABASE_DATASOURCE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"woodpecker.sqlite"))),(0,n.kt)("p",null,"The database connection string. The default value is the path of the embedded SQLite database file."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"# MySQL\n# https://github.com/go-sql-driver/mysql#dsn-data-source-name\nWOODPECKER_DATABASE_DATASOURCE=root:password@tcp(1.2.3.4:3306)/woodpecker?parseTime=true\n\n# PostgreSQL\n# https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING\nWOODPECKER_DATABASE_DATASOURCE=postgres://root:password@1.2.3.4:5432/woodpecker?sslmode=disable\n")),(0,n.kt)("h3",s({},{id:"woodpecker_database_datasource_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_DATABASE_DATASOURCE_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Read the value for ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_DATABASE_DATASOURCE")," from the specified filepath"),(0,n.kt)("h3",s({},{id:"woodpecker_encryption_key"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ENCRYPTION_KEY")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Encryption key used to encrypt secrets in DB. See ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/administration/encryption"}),"secrets encryption")),(0,n.kt)("h3",s({},{id:"woodpecker_encryption_key_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ENCRYPTION_KEY_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Read the value for ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ENCRYPTION_KEY")," from the specified filepath"),(0,n.kt)("h3",s({},{id:"woodpecker_encryption_tink_keyset_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ENCRYPTION_TINK_KEYSET_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Filepath to encryption keyset used to encrypt secrets in DB. See ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/administration/encryption"}),"secrets encryption")),(0,n.kt)("h3",s({},{id:"woodpecker_encryption_disable"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ENCRYPTION_DISABLE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Boolean flag to decrypt secrets in DB and disable server encryption. See ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/administration/encryption"}),"secrets encryption")),(0,n.kt)("h3",s({},{id:"woodpecker_prometheus_auth_token"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_PROMETHEUS_AUTH_TOKEN")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Token to secure the Prometheus metrics endpoint.\nMust be set to enable the endpoint."),(0,n.kt)("h3",s({},{id:"woodpecker_prometheus_auth_token_file"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_PROMETHEUS_AUTH_TOKEN_FILE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Read the value for ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_PROMETHEUS_AUTH_TOKEN")," from the specified filepath"),(0,n.kt)("h3",s({},{id:"woodpecker_status_context"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_STATUS_CONTEXT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"ci/woodpecker"))),(0,n.kt)("p",null,"Context prefix Woodpecker will use to publish status messages to SCM. You probably will only need to change it if you run multiple Woodpecker instances for a single repository."),(0,n.kt)("h3",s({},{id:"woodpecker_status_context_format"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_STATUS_CONTEXT_FORMAT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"{{ .context }}/{{ .event }}/{{ .workflow }}"))),(0,n.kt)("p",null,"Template for the status messages published to forges, uses ",(0,n.kt)("a",s({parentName:"p"},{href:"https://pkg.go.dev/text/template"}),"Go templates")," as template language.\nSupported variables:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"context"),": Woodpecker's context (see ",(0,n.kt)("inlineCode",{parentName:"li"},"WOODPECKER_STATUS_CONTEXT"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"event"),": the event which started the pipeline"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"workflow"),": the workflow's name"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"owner"),": the repo's owner"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"repo"),": the repo's name")),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"woodpecker_limit_mem_swap"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LIMIT_MEM_SWAP")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"0"))),(0,n.kt)("p",null,"The maximum amount of memory a single pipeline container is allowed to swap to disk, configured in bytes. There is no limit if ",(0,n.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,n.kt)("h3",s({},{id:"woodpecker_limit_mem"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LIMIT_MEM")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"0"))),(0,n.kt)("p",null,"The maximum amount of memory a single pipeline container can use, configured in bytes. There is no limit if ",(0,n.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,n.kt)("h3",s({},{id:"woodpecker_limit_shm_size"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LIMIT_SHM_SIZE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"0"))),(0,n.kt)("p",null,"The maximum amount of memory of ",(0,n.kt)("inlineCode",{parentName:"p"},"/dev/shm")," allowed in bytes. There is no limit if ",(0,n.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,n.kt)("h3",s({},{id:"woodpecker_limit_cpu_quota"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LIMIT_CPU_QUOTA")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"0"))),(0,n.kt)("p",null,"The number of microseconds per CPU period that the container is limited to before throttled. There is no limit if ",(0,n.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,n.kt)("h3",s({},{id:"woodpecker_limit_cpu_shares"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LIMIT_CPU_SHARES")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ",(0,n.kt)("inlineCode",{parentName:"p"},"0"))),(0,n.kt)("p",null,"The relative weight vs. other containers."),(0,n.kt)("h3",s({},{id:"woodpecker_limit_cpu_set"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_LIMIT_CPU_SET")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: empty")),(0,n.kt)("p",null,"Comma-separated list to limit the specific CPUs or cores a pipeline container can use."),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_LIMIT_CPU_SET=1,2")),(0,n.kt)("h3",s({},{id:"woodpecker_config_service_endpoint"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_CONFIG_SERVICE_ENDPOINT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: ``")),(0,n.kt)("p",null,"Specify a configuration service endpoint, see ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/administration/external-configuration-api"}),"Configuration Extension")),(0,n.kt)("h3",s({},{id:"woodpecker_forge_timeout"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_FORGE_TIMEOUT")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: 3sec")),(0,n.kt)("p",null,"Specify how many seconds before timeout when fetching the Woodpecker configuration from a Forge"),(0,n.kt)("h3",s({},{id:"woodpecker_root_path"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ROOT_PATH")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: extracted from ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_HOST"))),(0,n.kt)("p",null,"Server URL path prefix (used for statics loading when having a url path prefix), should start with ",(0,n.kt)("inlineCode",{parentName:"p"},"/")),(0,n.kt)("p",null,"Example: ",(0,n.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ROOT_PATH=/woodpecker")),(0,n.kt)("h3",s({},{id:"woodpecker_enable_swagger"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_ENABLE_SWAGGER")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Default: true")),(0,n.kt)("p",null,"Enable the Swagger UI for API documentation."),(0,n.kt)("hr",null),(0,n.kt)("h3",s({},{id:"woodpecker_github_"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GITHUB_...")),(0,n.kt)("p",null,"See ",(0,n.kt)("a",s({parentName:"p"},{href:"forges/github/#configuration"}),"GitHub configuration")),(0,n.kt)("h3",s({},{id:"woodpecker_gitea_"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GITEA_...")),(0,n.kt)("p",null,"See ",(0,n.kt)("a",s({parentName:"p"},{href:"forges/gitea/#configuration"}),"Gitea configuration")),(0,n.kt)("h3",s({},{id:"woodpecker_bitbucket_"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_BITBUCKET_...")),(0,n.kt)("p",null,"See ",(0,n.kt)("a",s({parentName:"p"},{href:"forges/bitbucket/#configuration"}),"Bitbucket configuration")),(0,n.kt)("h3",s({},{id:"woodpecker_gitlab_"}),(0,n.kt)("inlineCode",{parentName:"h3"},"WOODPECKER_GITLAB_...")),(0,n.kt)("p",null,"See ",(0,n.kt)("a",s({parentName:"p"},{href:"forges/gitlab/#configuration"}),"Gitlab configuration")))}v.isMDXComponent=!0}}]);