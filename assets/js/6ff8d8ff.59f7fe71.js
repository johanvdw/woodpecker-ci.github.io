"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[5520],{49613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),y=p(n),u=o,m=y["".concat(s,".").concat(u)]||y[u]||d[u]||i;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},86594:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>u,default:()=>b,frontMatter:()=>y,metadata:()=>m,toc:()=>f});var r=n(49613),o=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))p.call(t,n)&&c(e,n,t[n]);return e};const y={},u="Secrets encryption",m={unversionedId:"administration/encryption",id:"version-1.0/administration/encryption",title:"Secrets encryption",description:"By default, Woodpecker does not encrypt secrets in its database. You can enable encryption",source:"@site/versioned_docs/version-1.0/30-administration/40-encryption.md",sourceDirName:"30-administration",slug:"/administration/encryption",permalink:"/docs/1.0/administration/encryption",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/master/docs/versioned_docs/version-1.0/30-administration/40-encryption.md",tags:[],version:"1.0",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Databases",permalink:"/docs/1.0/administration/database"},next:{title:"SSL",permalink:"/docs/1.0/administration/ssl"}},k={},f=[{value:"Common",id:"common",level:2},{value:"Enabling secrets encryption",id:"enabling-secrets-encryption",level:3},{value:"Disabling encryption and decrypting all secrets",id:"disabling-encryption-and-decrypting-all-secrets",level:3},{value:"AES",id:"aes",level:2},{value:"Configuration",id:"configuration",level:3},{value:"TINK",id:"tink",level:2},{value:"Configuration",id:"configuration-1",level:3},{value:"Encryption keys",id:"encryption-keys",level:3},{value:"Key rotation",id:"key-rotation",level:3}],v={toc:f};function b(e){var t,n=e,{components:o}=n,c=((e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=d(d({},v),c),i(t,a({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("h1",d({},{id:"secrets-encryption"}),"Secrets encryption"),(0,r.kt)("p",null,"By default, Woodpecker does not encrypt secrets in its database. You can enable encryption\nusing simple AES key or more advanced ",(0,r.kt)("a",d({parentName:"p"},{href:"https://developers.google.com/tink"}),"Google TINK")," encryption."),(0,r.kt)("h2",d({},{id:"common"}),"Common"),(0,r.kt)("h3",d({},{id:"enabling-secrets-encryption"}),"Enabling secrets encryption"),(0,r.kt)("p",null,"To enable secrets encryption and encrypt all existing secrets in database set\n",(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ENCRYPTION_KEY"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ENCRYPTION_KEY_FILE")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ENCRYPTION_TINK_KEYSET_PATH")," environment\nvariable depending on encryption method of your choice."),(0,r.kt)("p",null,"After encryption is enabled you will be unable to start Woodpecker server without providing valid encryption key!"),(0,r.kt)("h3",d({},{id:"disabling-encryption-and-decrypting-all-secrets"}),"Disabling encryption and decrypting all secrets"),(0,r.kt)("p",null,"To disable secrets encryption and decrypt database you need to start server with valid\n",(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ENCRYPTION_KEY")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ENCRYPTION_TINK_KEYSET_FILE")," environment variable set depending on\nenabled encryption method, and ",(0,r.kt)("inlineCode",{parentName:"p"},"WOODPECKER_ENCRYPTION_DISABLE")," set to true."),(0,r.kt)("p",null,'After secrets was decrypted server will proceed working in unencrypted mode. You will not need to use "disable encryption"\nvariable or encryption keys to start server anymore.'),(0,r.kt)("h2",d({},{id:"aes"}),"AES"),(0,r.kt)("p",null,"Simple AES encryption."),(0,r.kt)("h3",d({},{id:"configuration"}),"Configuration"),(0,r.kt)("p",null,"You can manage encryption on server using these environment variables:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WOODPECKER_ENCRYPTION_KEY")," - encryption key"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WOODPECKER_ENCRYPTION_KEY_FILE")," - file to read encryption key from"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WOODPECKER_ENCRYPTION_DISABLE")," - disable encryption flag used to decrypt all data on server")),(0,r.kt)("h2",d({},{id:"tink"}),"TINK"),(0,r.kt)("p",null,"TINK uses AEAD encryption instead of simple AES and supports key rotation."),(0,r.kt)("h3",d({},{id:"configuration-1"}),"Configuration"),(0,r.kt)("p",null,"You can manage encryption on server using these two environment variables:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WOODPECKER_ENCRYPTION_TINK_KEYSET_FILE")," - keyset filepath"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WOODPECKER_ENCRYPTION_DISABLE")," - disable encryption flag used to decrypt all data on server")),(0,r.kt)("h3",d({},{id:"encryption-keys"}),"Encryption keys"),(0,r.kt)("p",null,"You will need plaintext AEAD-compatible Google TINK keyset to encrypt your data."),(0,r.kt)("p",null,"To generate it and then rotate keys if needed, install ",(0,r.kt)("inlineCode",{parentName:"p"},"tinkey"),"(",(0,r.kt)("a",d({parentName:"p"},{href:"https://developers.google.com/tink/install-tinkey"}),"installation guide"),")"),(0,r.kt)("p",null,"Keyset contains one or more keys, used to encrypt or decrypt your data, and primary key ID, used to determine which key\nto use while encrypting new data."),(0,r.kt)("p",null,"Keyset generation example:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-shell"}),"tinkey create-keyset --key-template AES256_GCM --out-format json --out keyset.json\n")),(0,r.kt)("h3",d({},{id:"key-rotation"}),"Key rotation"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"tinkey")," to rotate encryption keys in your existing keyset:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-shell"}),"tinkey rotate-keyset --in keyset_v1.json --out keyset_v2.json --key-template AES256_GCM\n")),(0,r.kt)("p",null,"Then you just need to replace server keyset file with the new one. At the moment server detects new encryption\nkeyset it will re-encrypt all existing secrets with the new key, so you will be unable to start server with previous\nkeyset anymore."))}b.isMDXComponent=!0}}]);