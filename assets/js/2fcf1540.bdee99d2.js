"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[5730],{17942:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>k});var o=r(50959);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,o,t=function(e,n){if(null==e)return{};var r,o,t={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=o.createContext({}),l=function(e){var n=o.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},p=function(e){var n=l(e.components);return o.createElement(i.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var r=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),u=t,k=d["".concat(i,".").concat(u)]||d[u]||m[u]||a;return r?o.createElement(k,c(c({ref:n},p),{},{components:r})):o.createElement(k,c({ref:n},p))}));function k(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=r.length,c=new Array(a);c[0]=u;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[d]="string"==typeof e?e:t,c[1]=s;for(var l=2;l<a;l++)c[l]=r[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},93570:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>f,contentTitle:()=>v,default:()=>h,frontMatter:()=>k,metadata:()=>E,toc:()=>g});var o=r(17942),t=Object.defineProperty,a=Object.defineProperties,c=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,p=(e,n,r)=>n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,d=(e,n)=>{for(var r in n||(n={}))i.call(n,r)&&p(e,r,n[r]);if(s)for(var r of s(n))l.call(n,r)&&p(e,r,n[r]);return e},m=(e,n)=>a(e,c(n)),u=(e,n)=>{var r={};for(var o in e)i.call(e,o)&&n.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&s)for(var o of s(e))n.indexOf(o)<0&&l.call(e,o)&&(r[o]=e[o]);return r};const k={},v="docker-compose",E={unversionedId:"administration/deployment/docker-compose",id:"administration/deployment/docker-compose",title:"docker-compose",description:"The below docker-compose configuration can be used to start a Woodpecker server with a single agent.",source:"@site/docs/30-administration/00-deployment/10-docker-compose.md",sourceDirName:"30-administration/00-deployment",slug:"/administration/deployment/docker-compose",permalink:"/docs/next/administration/deployment/docker-compose",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/docs/30-administration/00-deployment/10-docker-compose.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/next/administration/deployment/overview"},next:{title:"Kubernetes",permalink:"/docs/next/administration/deployment/kubernetes"}},f={},g=[{value:"Docker images",id:"docker-images",level:2}],O={toc:g},b="wrapper";function h(e){var n=e,{components:r}=n,t=u(n,["components"]);return(0,o.kt)(b,m(d(d({},O),t),{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",d({},{id:"docker-compose"}),"docker-compose"),(0,o.kt)("p",null,"The below ",(0,o.kt)("a",d({parentName:"p"},{href:"https://docs.docker.com/compose/"}),"docker-compose")," configuration can be used to start a Woodpecker server with a single agent."),(0,o.kt)("p",null,"It relies on a number of environment variables that you must set before running ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose up"),". The variables are described below."),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-yaml"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    image: woodpeckerci/woodpecker-server:latest\n    ports:\n      - 8000:8000\n    volumes:\n      - woodpecker-server-data:/var/lib/woodpecker/\n    environment:\n      - WOODPECKER_OPEN=true\n      - WOODPECKER_HOST=${WOODPECKER_HOST}\n      - WOODPECKER_GITHUB=true\n      - WOODPECKER_GITHUB_CLIENT=${WOODPECKER_GITHUB_CLIENT}\n      - WOODPECKER_GITHUB_SECRET=${WOODPECKER_GITHUB_SECRET}\n      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}\n\n  woodpecker-agent:\n    image: woodpeckerci/woodpecker-agent:latest\n    command: agent\n    restart: always\n    depends_on:\n      - woodpecker-server\n    volumes:\n      - woodpecker-agent-config:/etc/woodpecker\n      - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n      - WOODPECKER_SERVER=woodpecker-server:9000\n      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}\n\nvolumes:\n  woodpecker-server-data:\n  woodpecker-agent-config:\n")),(0,o.kt)("p",null,"Woodpecker needs to know its own address. You must therefore provide the public address of it in ",(0,o.kt)("inlineCode",{parentName:"p"},"<scheme>://<hostname>")," format. Please omit trailing slashes:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_HOST=${WOODPECKER_HOST}\n")),(0,o.kt)("p",null,"Woodpecker can also have its port's configured. It uses a separate port for gRPC and for HTTP. The agent performs gRPC calls and connects to the gRPC port.\nThey can be configured with ADDR variables:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_GRPC_ADDR=${WOODPECKER_GRPC_ADDR}\n+     - WOODPECKER_SERVER_ADDR=${WOODPECKER_HTTP_ADDR}\n")),(0,o.kt)("p",null,"Reverse proxying can also be ",(0,o.kt)("a",d({parentName:"p"},{href:"../proxy#caddy"}),"configured for gRPC"),". If the agents are connecting over the internet, it should also be SSL encrypted. The agent then needs to be configured to be secure:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_GRPC_SECURE=true # defaults to false\n+     - WOODPECKER_GRPC_VERIFY=true # default\n")),(0,o.kt)("p",null,"As agents run pipeline steps as docker containers they require access to the host machine's Docker daemon:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  [...]\n  woodpecker-agent:\n    [...]\n+   volumes:\n+     - /var/run/docker.sock:/var/run/docker.sock\n")),(0,o.kt)("p",null,"Agents require the server address for agent-to-server communication. The agent connects to the server's gRPC port:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-agent:\n    [...]\n    environment:\n+     - WOODPECKER_SERVER=woodpecker-server:9000\n")),(0,o.kt)("p",null,"The server and agents use a shared secret to authenticate communication. This should be a random string of your choosing and should be kept private. You can generate such string with ",(0,o.kt)("inlineCode",{parentName:"p"},"openssl rand -hex 32"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-diff"}),"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}\n  woodpecker-agent:\n    [...]\n    environment:\n      - [...]\n+     - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}\n")),(0,o.kt)("h2",d({},{id:"docker-images"}),"Docker images"),(0,o.kt)("p",null,"Image variants:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"latest")," image is the latest stable release"),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"vX.X.X")," images are stable releases"),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"vX.X")," images are based on the current release branch (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"release/v1.0"),") and can be used to get bugfixes asap"),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"next")," images are based on the current ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," branch and should not be used for production environments")),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"# server\ndocker pull woodpeckerci/woodpecker-server:latest\ndocker pull woodpeckerci/woodpecker-server:latest-alpine\n\n# agent\ndocker pull woodpeckerci/woodpecker-agent:latest\ndocker pull woodpeckerci/woodpecker-agent:latest-alpine\n\n# cli\ndocker pull woodpeckerci/woodpecker-cli:latest\ndocker pull woodpeckerci/woodpecker-cli:latest-alpine\n")))}h.isMDXComponent=!0}}]);