"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[4476],{17942:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var o=n(50959);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(k,i(i({ref:t},p),{},{components:n})):o.createElement(k,i({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64455:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>N,frontMatter:()=>k,metadata:()=>b,toc:()=>v});var o=n(17942),r=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&p(e,n,t[n]);if(s)for(var n of s(t))c.call(t,n)&&p(e,n,t[n]);return e},d=(e,t)=>a(e,i(t)),m=(e,t)=>{var n={};for(var o in e)l.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&s)for(var o of s(e))t.indexOf(o)<0&&c.call(e,o)&&(n[o]=e[o]);return n};const k={},f="Kubernetes backend",b={unversionedId:"administration/backends/kubernetes",id:"administration/backends/kubernetes",title:"Kubernetes backend",description:"Not all pipeline features are fully supported yet for this backend.",source:"@site/docs/30-administration/22-backends/40-kubernetes.md",sourceDirName:"30-administration/22-backends",slug:"/administration/backends/kubernetes",permalink:"/docs/next/administration/backends/kubernetes",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/docs/30-administration/22-backends/40-kubernetes.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SSH backend",permalink:"/docs/next/administration/backends/ssh"},next:{title:"Databases",permalink:"/docs/next/administration/database"}},h={},v=[{value:"General Configuration",id:"general-configuration",level:2},{value:"Job specific configuration",id:"job-specific-configuration",level:2},{value:"Resources",id:"resources",level:3},{value:"serviceAccountName",id:"serviceaccountname",level:3},{value:"nodeSelector",id:"nodeselector",level:3},{value:"tolerations",id:"tolerations",level:3},{value:"Volumes",id:"volumes",level:3}],y={toc:v},g="wrapper";function N(e){var t=e,{components:n}=t,r=m(t,["components"]);return(0,o.kt)(g,d(u(u({},y),r),{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",u({},{id:"kubernetes-backend"}),"Kubernetes backend"),(0,o.kt)("admonition",u({},{type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"Not all pipeline features are fully supported yet for this backend.\nCheck ",(0,o.kt)("a",u({parentName:"p"},{href:"https://github.com/woodpecker-ci/woodpecker/issues/1513"}),"the Kubernetes overview issue")," for a summary.")),(0,o.kt)("p",null,"The kubernetes backend executes steps inside standalone pods. A temporary PVC is created for the lifetime of the pipeline to transfer files between steps."),(0,o.kt)("h2",u({},{id:"general-configuration"}),"General Configuration"),(0,o.kt)("p",null,"These env vars can be set in the ",(0,o.kt)("inlineCode",{parentName:"p"},"env:")," sections of both ",(0,o.kt)("inlineCode",{parentName:"p"},"server")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"agent"),".\nThey do not need to be set for both but only for the part to which it is relevant to."),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-yml"}),'server:\n  env:\n    WOODPECKER_SESSION_EXPIRES: "300h"\n    [...]\n\nagent:\n  env:\n    [...]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_NAMESPACE")," (default: ",(0,o.kt)("inlineCode",{parentName:"p"},"woodpecker"),")"),(0,o.kt)("p",{parentName:"li"},"The namespace to create worker pods in.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_VOLUME_SIZE")," (default: ",(0,o.kt)("inlineCode",{parentName:"p"},"10G"),")"),(0,o.kt)("p",{parentName:"li"},"The volume size of the pipeline volume.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_STORAGE_CLASS")," (default: empty)"),(0,o.kt)("p",{parentName:"li"},"The storage class to use for the pipeline volume.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_STORAGE_RWX")," (default: ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),")"),(0,o.kt)("p",{parentName:"li"},"Determines if ",(0,o.kt)("inlineCode",{parentName:"p"},"RWX")," should be used for the pipeline volume's ",(0,o.kt)("a",u({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"}),"access mode"),". If false, ",(0,o.kt)("inlineCode",{parentName:"p"},"RWO")," is used instead.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_POD_LABELS")," (default: empty)"),(0,o.kt)("p",{parentName:"li"},"Additional labels to apply to worker pods. Must be a YAML object, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},'{"example.com/test-label":"test-value"}'),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"WOODPECKER_BACKEND_K8S_POD_ANNOTATIONS")," (default: empty)"),(0,o.kt)("p",{parentName:"li"},"Additional annotations to apply to worker pods. Must be a YAML object, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},'{"example.com/test-annotation":"test-value"}'),"."))),(0,o.kt)("h2",u({},{id:"job-specific-configuration"}),"Job specific configuration"),(0,o.kt)("h3",u({},{id:"resources"}),"Resources"),(0,o.kt)("p",null,"The kubernetes backend also allows for specifying requests and limits on a per-step basic, most commonly for CPU and memory.\nWe recommend to add a ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," definition to all steps to ensure efficient scheduling."),(0,o.kt)("p",null,"Here is an example definition with an arbitrary ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," definition below the ",(0,o.kt)("inlineCode",{parentName:"p"},"backend_options")," section:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-yml"}),"steps:\n  'My kubernetes step':\n    image: alpine\n    commands:\n      - echo \"Hello world\"\n    backend_options:\n      kubernetes:\n        resources:\n          requests:\n            memory: 200Mi\n            cpu: 100m\n          limits:\n            memory: 400Mi\n            cpu: 1000m\n")),(0,o.kt)("h3",u({},{id:"serviceaccountname"}),"serviceAccountName"),(0,o.kt)("p",null,"Specify the name of the ServiceAccount which the build pod will mount. This serviceAccount must be created externally.\nSee the ",(0,o.kt)("a",u({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/security/service-accounts/"}),"kubernetes documentation")," for more information on using serviceAccounts."),(0,o.kt)("h3",u({},{id:"nodeselector"}),"nodeSelector"),(0,o.kt)("p",null,'Specify the label which is used to select the node where the job should be executed. Labels defined here will be appended to a list already containing "kubernetes.io/arch".\nBy default the pod will use "kubernetes.io/arch" inferred from top-level "platform" setting which is deducted from the agents\' environment variable CI_SYSTEM_PLATFORM. To overwrite this, you need to specify this label in the nodeSelector section.\nSee the ',(0,o.kt)("a",u({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector"}),"kubernetes documentation")," for more information on using nodeSelector."),(0,o.kt)("h3",u({},{id:"tolerations"}),"tolerations"),(0,o.kt)("p",null,"When you use nodeSelector and the node pool is configured with Taints, you need to specify the Tolerations. Tolerations allow the scheduler to schedule pods with matching taints.\nSee the ",(0,o.kt)("a",u({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/"}),"kubernetes documentation")," for more information on using tolerations."),(0,o.kt)("p",null,"Example pipeline configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-yaml"}),'steps:\n  build:\n    image: golang\n    commands:\n      - go get\n      - go build\n      - go test\n    backend_options:\n      kubernetes:\n        serviceAccountName: \'my-service-account\'\n        resources:\n          requests:\n            memory: 128Mi\n            cpu: 1000m\n          limits:\n            memory: 256Mi\n        nodeSelector:\n          beta.kubernetes.io/instance-type: p3.8xlarge\n        tolerations:\n        - key: "key1"\n          operator: "Equal"\n          value: "value1"\n          effect: "NoSchedule"\n          tolerationSeconds: 3600\n')),(0,o.kt)("h3",u({},{id:"volumes"}),"Volumes"),(0,o.kt)("p",null,"To mount volumes a persistent volume (PV) and persistent volume claim (PVC) are needed on the cluster which can be referenced in steps via the ",(0,o.kt)("inlineCode",{parentName:"p"},"volume:"),' option.\nAssuming a PVC named "woodpecker-cache" exists, it can be referenced as follows in a step:'),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-yaml"}),'steps:\n  "Restore Cache":\n    image: meltwater/drone-cache\n    volumes:\n      - woodpecker-cache:/woodpecker/src/cache\n    settings:\n      mount:\n        - "woodpecker-cache"\n    [...]\n')))}N.isMDXComponent=!0}}]);