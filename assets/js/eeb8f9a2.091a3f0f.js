"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[8166],{49613:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(59496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),u=o,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||n;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<n;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},35940:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>k,default:()=>v,frontMatter:()=>f,metadata:()=>g,toc:()=>w});var a=r(49613),o=Object.defineProperty,n=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&c(e,r,t[r]);if(s)for(var r of s(t))p.call(t,r)&&c(e,r,t[r]);return e},d=(e,t)=>n(e,i(t)),u=(e,t)=>{var r={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&p.call(e,a)&&(r[a]=e[a]);return r};const f={},k="Terminology",g={unversionedId:"usage/terminology",id:"version-1.0/usage/terminology",title:"Terminology",description:"Glossary",source:"@site/versioned_docs/version-1.0/20-usage/15-terminology.md",sourceDirName:"20-usage",slug:"/usage/terminology",permalink:"/docs/usage/terminology",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/versioned_docs/version-1.0/20-usage/15-terminology.md",tags:[],version:"1.0",sidebarPosition:15,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/usage/intro"},next:{title:"Pipeline syntax",permalink:"/docs/usage/pipeline-syntax"}},h={},w=[{value:"Glossary",id:"glossary",level:2},{value:"Terms",id:"terms",level:2}],y={toc:w},N="wrapper";function v(e){var t=e,{components:r}=t,o=u(t,["components"]);return(0,a.kt)(N,d(m(m({},y),o),{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",m({},{id:"terminology"}),"Terminology"),(0,a.kt)("h2",m({},{id:"glossary"}),"Glossary"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Woodpecker CI"),": The project name around Woodpecker."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Woodpecker"),": An open-source tool that executes ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/pipeline-syntax"}),"pipelines")," on your code."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Server"),": The component of Woodpecker that handles webhooks from forges, orchestrates agents, and sends status back. It also serves the API and web UI for administration and configuration."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Agent"),": A component of Woodpecker that executes ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/pipeline-syntax"}),"pipelines")," (specifically one or more ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflows"),") with a specific backend (e.g. ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/administration/backends/docker"}),"Docker"),", Kubernetes, ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/administration/backends/local"}),"local"),"). It connects to the server via GRPC."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CLI"),": The Woodpecker command-line interface (CLI) is a terminal tool used to administer the server, to execute pipelines locally for debugging / testing purposes, and to perform tasks like linting pipelines."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Pipeline"),": A sequence of ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflows")," that are executed on the code. ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/pipeline-syntax"}),"Pipelines")," are triggered by events."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Workflow"),": A sequence of steps and services that are executed as part of a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/pipeline-syntax"}),"pipeline"),". Workflows are represented by YAML files. Each ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow")," has its own isolated ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/pipeline-syntax#workspace"}),"workspace"),", and often additional resources like a shared network (docker)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Steps"),": Individual commands, actions or tasks within a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Code"),": Refers to the files tracked by the version control system used by the ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/administration/forges/overview"}),"forge"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Repos"),": Short for repositories, these are storage locations where code is stored."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Forge"),": The hosting platform or service where the repositories are hosted."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Workspace"),": A folder shared between all steps of a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow")," containing the repository and all the generated data from previous steps."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Event"),": Triggers the execution of a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/pipeline-syntax"}),"pipeline"),", such as a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/administration/forges/overview"}),"forge")," event like ",(0,a.kt)("inlineCode",{parentName:"li"},"push"),", or ",(0,a.kt)("inlineCode",{parentName:"li"},"manual")," triggered manually from the UI."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Commit"),": A defined state of the code, usually associated with a version control system like Git."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Matrix"),": A configuration option that allows the execution of ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflows")," for each value in the ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/matrix-workflows"}),"matrix"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Service"),": A service is a step that is executed from the start of a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow")," until its end. It can be accessed by name via the network from other steps within the same ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Plugins"),": ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/plugins/plugins"}),"Plugins")," are extensions that provide pre-defined actions or commands for a step in a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow"),". They can be configured via settings."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Container"),": A lightweight and isolated environment where commands are executed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"YAML File"),": A file format used to define and configure ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflows"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Dependency"),": ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"Workflows")," can depend on each other, and if possible, they are executed in parallel."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Status"),": Status refers to the outcome of a step or ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow")," after it has been executed, determined by the internal command exit code. At the end of a ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/usage/workflows"}),"workflow"),", its status is sent to the ",(0,a.kt)("a",m({parentName:"li"},{href:"/docs/administration/forges/overview"}),"forge"),".")),(0,a.kt)("h2",m({},{id:"terms"}),"Terms"),(0,a.kt)("p",null,"Sometimes there exist multiple terms that can be used for a thing, we try to define it here once and stick to it."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"environment variables ",(0,a.kt)("inlineCode",{parentName:"li"},"*_LINK")," should be ",(0,a.kt)("inlineCode",{parentName:"li"},"*_URL"),", also in code, use ",(0,a.kt)("inlineCode",{parentName:"li"},"URL()")," instead of ",(0,a.kt)("inlineCode",{parentName:"li"},"Link")," (",(0,a.kt)("a",m({parentName:"li"},{href:"https://framadate.org/jVSQHwIGfJYy82IL"}),"Vote"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Pipelines")," were previously called ",(0,a.kt)("strong",{parentName:"li"},"builds")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Steps")," were previously called ",(0,a.kt)("strong",{parentName:"li"},"jobs"))))}v.isMDXComponent=!0}}]);