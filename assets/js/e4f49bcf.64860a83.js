"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[6105],{49613:(e,r,o)=>{o.d(r,{Zo:()=>u,kt:()=>m});var t=o(59496);function n(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function i(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function a(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?i(Object(o),!0).forEach((function(r){n(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function c(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)o=i[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)o=i[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=t.createContext({}),p=function(e){var r=t.useContext(s),o=r;return e&&(o="function"==typeof e?e(r):a(a({},r),e)),o},u=function(e){var r=p(e.components);return t.createElement(s.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var o=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(o),m=n,b=d["".concat(s,".").concat(m)]||d[m]||l[m]||i;return o?t.createElement(b,a(a({ref:r},u),{},{components:o})):t.createElement(b,a({ref:r},u))}));function m(e,r){var o=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=d;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var p=2;p<i;p++)a[p]=o[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,o)}d.displayName="MDXCreateElement"},90668:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>k,contentTitle:()=>m,default:()=>_,frontMatter:()=>d,metadata:()=>b,toc:()=>f});var t=o(49613),n=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,r,o)=>r in e?n(e,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[r]=o,l=(e,r)=>{for(var o in r||(r={}))s.call(r,o)&&u(e,o,r[o]);if(c)for(var o of c(r))p.call(r,o)&&u(e,o,r[o]);return e};const d={},m="Prometheus",b={unversionedId:"administration/prometheus",id:"version-0.15/administration/prometheus",title:"Prometheus",description:"Woodpecker is compatible with Prometheus and exposes a /metrics endpoint. Please note that access to the metrics endpoint is restricted and requires an authorization token with administrative privileges.",source:"@site/versioned_docs/version-0.15/30-administration/90-prometheus.md",sourceDirName:"30-administration",slug:"/administration/prometheus",permalink:"/docs/administration/prometheus",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/master/docs/versioned_docs/version-0.15/30-administration/90-prometheus.md",tags:[],version:"0.15",sidebarPosition:90,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Kubernetes",permalink:"/docs/administration/kubernetes"},next:{title:"CLI",permalink:"/docs/cli"}},k={},f=[{value:"Authorization",id:"authorization",level:2},{value:"Metric Reference",id:"metric-reference",level:2}],w={toc:f};function _(e){var r,o=e,{components:n}=o,u=((e,r)=>{var o={};for(var t in e)s.call(e,t)&&r.indexOf(t)<0&&(o[t]=e[t]);if(null!=e&&c)for(var t of c(e))r.indexOf(t)<0&&p.call(e,t)&&(o[t]=e[t]);return o})(o,["components"]);return(0,t.kt)("wrapper",(r=l(l({},w),u),i(r,a({components:n,mdxType:"MDXLayout"}))),(0,t.kt)("h1",l({},{id:"prometheus"}),"Prometheus"),(0,t.kt)("p",null,"Woodpecker is compatible with Prometheus and exposes a ",(0,t.kt)("inlineCode",{parentName:"p"},"/metrics")," endpoint. Please note that access to the metrics endpoint is restricted and requires an authorization token with administrative privileges."),(0,t.kt)("pre",null,(0,t.kt)("code",l({parentName:"pre"},{className:"language-yaml"}),"global:\n  scrape_interval: 60s\n\nscrape_configs:\n  - job_name: 'woodpecker'\n    bearer_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n\n    static_configs:\n       - targets: ['woodpecker.domain.com']\n")),(0,t.kt)("h2",l({},{id:"authorization"}),"Authorization"),(0,t.kt)("p",null,"An administrator will need to generate a user api token and configure in the prometheus configuration file as a bearer token. Please see the following example:"),(0,t.kt)("pre",null,(0,t.kt)("code",l({parentName:"pre"},{className:"language-diff"}),"global:\n  scrape_interval: 60s\n\nscrape_configs:\n  - job_name: 'woodpecker'\n+   bearer_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n\n    static_configs:\n       - targets: ['woodpecker.domain.com']\n")),(0,t.kt)("h2",l({},{id:"metric-reference"}),"Metric Reference"),(0,t.kt)("p",null,"List of prometheus metrics specific to Woodpecker:"),(0,t.kt)("pre",null,(0,t.kt)("code",l({parentName:"pre"},{}),'# HELP woodpecker_build_count Build count.\n# TYPE woodpecker_build_count counter\nwoodpecker_build_count{branch="master",pipeline="total",repo="woodpecker-ci/woodpecker",status="success"} 3\nwoodpecker_build_count{branch="mkdocs",pipeline="total",repo="woodpecker-ci/woodpecker",status="success"} 3\n# HELP woodpecker_build_time Build time.\n# TYPE woodpecker_build_time gauge\nwoodpecker_build_time{branch="master",pipeline="total",repo="woodpecker-ci/woodpecker",status="success"} 116\nwoodpecker_build_time{branch="mkdocs",pipeline="total",repo="woodpecker-ci/woodpecker",status="success"} 155\n# HELP woodpecker_build_total_count Total number of builds.\n# TYPE woodpecker_build_total_count gauge\nwoodpecker_build_total_count 1025\n# HELP woodpecker_pending_jobs Total number of pending build processes.\n# TYPE woodpecker_pending_jobs gauge\nwoodpecker_pending_jobs 0\n# HELP woodpecker_repo_count Total number of repos.\n# TYPE woodpecker_repo_count gauge\nwoodpecker_repo_count 9\n# HELP woodpecker_running_jobs Total number of running build processes.\n# TYPE woodpecker_running_jobs gauge\nwoodpecker_running_jobs 0\n# HELP woodpecker_user_count Total number of users.\n# TYPE woodpecker_user_count gauge\nwoodpecker_user_count 1\n# HELP woodpecker_waiting_jobs Total number of builds waiting on deps.\n# TYPE woodpecker_waiting_jobs gauge\nwoodpecker_waiting_jobs 0\n# HELP woodpecker_worker_count Total number of workers.\n# TYPE woodpecker_worker_count gauge\nwoodpecker_worker_count 4\n')))}_.isMDXComponent=!0}}]);