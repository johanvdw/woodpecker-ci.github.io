"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[3483],{49613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(59496);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),k=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=k(e.components);return r.createElement(s.Provider,{value:t},e.children)},i="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),i=k(n),m=l,d=i["".concat(s,".").concat(m)]||i[m]||g[m]||a;return n?r.createElement(d,p(p({ref:t},u),{},{components:n})):r.createElement(d,p({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,p=new Array(a);p[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[i]="string"==typeof e?e:l,p[1]=o;for(var k=2;k<a;k++)p[k]=n[k];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41336:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>v,default:()=>b,frontMatter:()=>d,metadata:()=>c,toc:()=>f});var r=n(49613),l=Object.defineProperty,a=Object.defineProperties,p=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,i=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&u(e,n,t[n]);if(o)for(var n of o(t))k.call(t,n)&&u(e,n,t[n]);return e},g=(e,t)=>a(e,p(t)),m=(e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&k.call(e,r)&&(n[r]=e[r]);return n};const d={},v="CLI",c={unversionedId:"cli",id:"version-1.0/cli",title:"CLI",description:"woodpecker-cli - command line utility",source:"@site/versioned_docs/version-1.0/40-cli.md",sourceDirName:".",slug:"/cli",permalink:"/docs/cli",draft:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/versioned_docs/version-1.0/40-cli.md",tags:[],version:"1.0",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"External Configuration API",permalink:"/docs/administration/external-configuration-api"},next:{title:"Downloads",permalink:"/docs/downloads"}},N={},f=[{value:"pipeline, build",id:"pipeline-build",level:2},{value:"ls",id:"ls",level:3},{value:"last",id:"last",level:3},{value:"logs",id:"logs",level:3},{value:"info",id:"info",level:3},{value:"stop",id:"stop",level:3},{value:"start",id:"start",level:3},{value:"approve",id:"approve",level:3},{value:"decline",id:"decline",level:3},{value:"queue",id:"queue",level:3},{value:"ps",id:"ps",level:3},{value:"create",id:"create",level:3},{value:"log",id:"log",level:2},{value:"purge",id:"purge",level:3},{value:"deploy",id:"deploy",level:2},{value:"exec",id:"exec",level:2},{value:"info",id:"info-1",level:2},{value:"registry",id:"registry",level:2},{value:"add",id:"add",level:3},{value:"rm",id:"rm",level:3},{value:"update",id:"update",level:3},{value:"info",id:"info-2",level:3},{value:"ls",id:"ls-1",level:3},{value:"secret",id:"secret",level:2},{value:"add",id:"add-1",level:3},{value:"rm",id:"rm-1",level:3},{value:"update",id:"update-1",level:3},{value:"info",id:"info-3",level:3},{value:"ls",id:"ls-2",level:3},{value:"repo",id:"repo",level:2},{value:"ls",id:"ls-3",level:3},{value:"info",id:"info-4",level:3},{value:"add",id:"add-2",level:3},{value:"update",id:"update-2",level:3},{value:"rm",id:"rm-2",level:3},{value:"repair",id:"repair",level:3},{value:"chown",id:"chown",level:3},{value:"sync",id:"sync",level:3},{value:"user",id:"user",level:2},{value:"ls",id:"ls-4",level:3},{value:"info",id:"info-5",level:3},{value:"add",id:"add-3",level:3},{value:"rm",id:"rm-3",level:3},{value:"lint",id:"lint",level:2},{value:"log-level",id:"log-level",level:2},{value:"cron",id:"cron",level:2},{value:"add",id:"add-4",level:3},{value:"rm",id:"rm-4",level:3},{value:"update",id:"update-3",level:3},{value:"info",id:"info-6",level:3},{value:"ls",id:"ls-5",level:3}],h={toc:f},y="wrapper";function b(e){var t=e,{components:n}=t,l=m(t,["components"]);return(0,r.kt)(y,g(i(i({},h),l),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",i({},{id:"cli"}),"CLI"),(0,r.kt)("h1",i({},{id:"name"}),"NAME"),(0,r.kt)("p",null,"woodpecker-cli - command line utility"),(0,r.kt)("h1",i({},{id:"synopsis"}),"SYNOPSIS"),(0,r.kt)("p",null,"woodpecker-cli"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{}),"[--log-level]=[value]\n[--server|-s]=[value]\n[--token|-t]=[value]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",i({parentName:"pre"},{}),"woodpecker-cli [GLOBAL OPTIONS] command [COMMAND OPTIONS] [ARGUMENTS...]\n")),(0,r.kt)("h1",i({},{id:"global-options"}),"GLOBAL OPTIONS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h1",i({},{id:"commands"}),"COMMANDS"),(0,r.kt)("h2",i({},{id:"pipeline-build"}),"pipeline, build"),(0,r.kt)("p",null,"manage pipelines"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"ls"}),"ls"),(0,r.kt)("p",null,"show pipeline history"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--branch"),'="": branch filter'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--event"),'="": event filter'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33mPipeline #{{ .Number }} \x1b[0m\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nAuthor: {{ .Author }} {{ if .Email }}<{{.Email}}>{{ end }}\nMessage: {{ .Message }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--limit"),'="": limit the list size (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--status"),'="": status filter'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"last"}),"last"),(0,r.kt)("p",null,"show latest pipeline details"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--branch"),'="": branch name (default: master)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Number: {{ .Number }}\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nMessage: {{ .Message }}\nAuthor: {{ .Author }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"logs"}),"logs"),(0,r.kt)("p",null,"show pipeline logs"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"info"}),"info"),(0,r.kt)("p",null,"show pipeline details"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Number: {{ .Number }}\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nMessage: {{ .Message }}\nAuthor: {{ .Author }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"stop"}),"stop"),(0,r.kt)("p",null,"stop a pipeline"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"start"}),"start"),(0,r.kt)("p",null,"start a pipeline"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--param, -p"),'="": custom parameters to be injected into the step environment. Format: KEY=value'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"approve"}),"approve"),(0,r.kt)("p",null,"approve a pipeline"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"decline"}),"decline"),(0,r.kt)("p",null,"decline a pipeline"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"queue"}),"queue"),(0,r.kt)("p",null,"show pipeline queue"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33m{{ .FullName }} #{{ .Number }} \x1b[0m\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nAuthor: {{ .Author }} {{ if .Email }}<{{.Email}}>{{ end }}\nMessage: {{ .Message }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"ps"}),"ps"),(0,r.kt)("p",null,"show pipeline steps"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33mStep #{{ .PID }} \x1b[0m\nStep: {{ .Name }}\nState: {{ .State }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"create"}),"create"),(0,r.kt)("p",null,"create new pipeline"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--branch"),'="": branch to create pipeline from'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33mPipeline #{{ .Number }} \x1b[0m\nStatus: {{ .Status }}\nEvent: {{ .Event }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nAuthor: {{ .Author }} {{ if .Email }}<{{.Email}}>{{ end }}\nMessage: {{ .Message }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--var"),'="": key=value'),(0,r.kt)("h2",i({},{id:"log"}),"log"),(0,r.kt)("p",null,"manage logs"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"purge"}),"purge"),(0,r.kt)("p",null,"purge a log"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"deploy"}),"deploy"),(0,r.kt)("p",null,"deploy code"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--branch"),'="": branch filter (default: master)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--event"),'="": event filter (default: push)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Number: {{ .Number }}\nStatus: {{ .Status }}\nCommit: {{ .Commit }}\nBranch: {{ .Branch }}\nRef: {{ .Ref }}\nMessage: {{ .Message }}\nAuthor: {{ .Author }}\nTarget: {{ .Deploy }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--param, -p"),'="": custom parameters to be injected into the step environment. Format: KEY=value'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--status"),'="": status filter (default: success)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"exec"}),"exec"),(0,r.kt)("p",null,"execute a local pipeline"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-docker-ipv6"),": backend docker enable IPV6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-docker-network"),'="": backend docker network'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-docker-volumes"),'="": backend docker volumes (comma separated)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-engine"),'="": backend engine to run pipelines on (default: auto-detect)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-k8s-namespace"),'="": backend k8s namespace (default: woodpecker)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-k8s-pod-annotations"),'="": backend k8s additional worker pod annotations'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-k8s-pod-labels"),'="": backend k8s additional worker pod labels'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-k8s-storage-class"),'="": backend k8s storage class'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-k8s-storage-rwx"),": backend k8s storage access mode, should ReadWriteMany (RWX) instead of ReadWriteOnce (RWO) be used? (default: true)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-k8s-volume-size"),'="": backend k8s volume size (default 10G) (default: 10G)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-ssh-address"),'="": backend ssh address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-ssh-key"),'="": backend ssh key file'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-ssh-key-password"),'="": backend ssh key password'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-ssh-password"),'="": backend ssh password'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--backend-ssh-user"),'="": backend ssh user'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-author-avatar"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-author-email"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-author-name"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-branch"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-message"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-ref"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-refspec"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--commit-sha"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--env"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--forge-type"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--forge-url"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--local"),": run from local directory"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--netrc-machine"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--netrc-password"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--netrc-username"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--network"),'="": external networks'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-created"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-event"),'="":  (default: manual)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-finished"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-link"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-number"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-parent"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-started"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-status"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-target"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-author-avatar"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-author-email"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-author-name"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-branch"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-message"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-ref"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-refspec"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-commit-sha"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-pipeline-created"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-pipeline-event"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-pipeline-finished"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-pipeline-link"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-pipeline-number"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-pipeline-started"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--prev-pipeline-status"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--privileged"),'="": privileged plugins (default: "plugins/docker", "plugins/gcr", "plugins/ecr", "woodpeckerci/plugin-docker-buildx")'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repo"),'="": full repo name'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repo-clone-url"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repo-link"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repo-private"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repo-remote-id"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repo-trusted"),": "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--step-name"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--system-link"),'="":  (default: ',(0,r.kt)("a",i({parentName:"p"},{href:"https://github.com/woodpecker-ci/woodpecker"}),"https://github.com/woodpecker-ci/woodpecker"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--system-name"),'="":  (default: woodpecker)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--system-platform"),'="": '),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--timeout"),'="": pipeline timeout (default: 0s)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--volumes"),'="": pipeline volumes'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--workflow-name"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--workflow-number"),'="":  (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--workspace-base"),'="":  (default: /woodpecker)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--workspace-path"),'="":  (default: src)'),(0,r.kt)("h2",i({},{id:"info-1"}),"info"),(0,r.kt)("p",null,"show information about the current user"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"registry"}),"registry"),(0,r.kt)("p",null,"manage registries"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"add"}),"add"),(0,r.kt)("p",null,"adds a registry"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--password"),'="": registry password'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--username"),'="": registry username'),(0,r.kt)("h3",i({},{id:"rm"}),"rm"),(0,r.kt)("p",null,"remove a registry"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"update"}),"update"),(0,r.kt)("p",null,"update a registry"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--password"),'="": registry password'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--username"),'="": registry username'),(0,r.kt)("h3",i({},{id:"info-2"}),"info"),(0,r.kt)("p",null,"display registry info"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--hostname"),'="": registry hostname (default: docker.io)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"ls-1"}),"ls"),(0,r.kt)("p",null,"list registries"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"secret"}),"secret"),(0,r.kt)("p",null,"manage secrets"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"add-1"}),"add"),(0,r.kt)("p",null,"adds a secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--event"),'="": secret limited to these events'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--image"),'="": secret limited to these images'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--plugins-only"),": secret limited to plugins"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--value"),'="": secret value'),(0,r.kt)("h3",i({},{id:"rm-1"}),"rm"),(0,r.kt)("p",null,"remove a secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"update-1"}),"update"),(0,r.kt)("p",null,"update a secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--event"),'="": secret limited to these events'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--image"),'="": secret limited to these images'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--plugins-only"),": secret limited to plugins"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--value"),'="": secret value'),(0,r.kt)("h3",i({},{id:"info-3"}),"info"),(0,r.kt)("p",null,"display secret info"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--name"),'="": secret name'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"ls-2"}),"ls"),(0,r.kt)("p",null,"list secrets"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--global"),": global secret"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--organization"),'="": organization name (e.g. octocat)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"repo"}),"repo"),(0,r.kt)("p",null,"manage repositories"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"ls-3"}),"ls"),(0,r.kt)("p",null,"list all repos"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33m{{ .FullName }}\x1b[0m (id: {{ .ID }}))'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--org"),'="": filter by organization'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"info-4"}),"info"),(0,r.kt)("p",null,"show repository details"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: Owner: {{ .Owner }}\nRepo: {{ .Name }}\nLink: {{ .Link }}\nConfig path: {{ .Config }}\nVisibility: {{ .Visibility }}\nPrivate: {{ .IsSCMPrivate }}\nTrusted: {{ .IsTrusted }}\nGated: {{ .IsGated }}\nClone url: {{ .Clone }}\nAllow pull-requests: {{ .AllowPullRequests }}\n)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"add-2"}),"add"),(0,r.kt)("p",null,"add a repository"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"update-2"}),"update"),(0,r.kt)("p",null,"update a repository"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--config"),'="": repository configuration path (e.g. .woodpecker.yml)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--gated"),": repository is gated"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--pipeline-counter"),'="": repository starting pipeline number (default: 0)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--timeout"),'="": repository timeout (default: 0s)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--trusted"),": repository is trusted"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--unsafe"),": validate updating the pipeline-counter is unsafe"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--visibility"),'="": repository visibility'),(0,r.kt)("h3",i({},{id:"rm-2"}),"rm"),(0,r.kt)("p",null,"remove a repository"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"repair"}),"repair"),(0,r.kt)("p",null,"repair repository webhooks"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"chown"}),"chown"),(0,r.kt)("p",null,"assume ownership of a repository"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"sync"}),"sync"),(0,r.kt)("p",null,"synchronize the repository list"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: \x1b[33m{{ .FullName }}\x1b[0m (id: {{ .ID }}))'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"user"}),"user"),(0,r.kt)("p",null,"manage users"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"ls-4"}),"ls"),(0,r.kt)("p",null,"list all users"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: {{ .Login }})'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"info-5"}),"info"),(0,r.kt)("p",null,"show user details"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--format"),'="": format output (default: User: {{ .Login }}\nEmail: {{ .Email }})'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"add-3"}),"add"),(0,r.kt)("p",null,"adds a user"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"rm-3"}),"rm"),(0,r.kt)("p",null,"remove a user"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"lint"}),"lint"),(0,r.kt)("p",null,"lint a pipeline configuration file"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"log-level"}),"log-level"),(0,r.kt)("p",null,"get the logging level of the server, or set it with ","[level]"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h2",i({},{id:"cron"}),"cron"),(0,r.kt)("p",null,"manage cron jobs"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"add-4"}),"add"),(0,r.kt)("p",null,"add a cron job"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--branch"),'="": cron branch'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--name"),'="": cron name'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--schedule"),'="": cron schedule'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"rm-4"}),"rm"),(0,r.kt)("p",null,"remove a cron job"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--id"),'="": cron id'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"update-3"}),"update"),(0,r.kt)("p",null,"update a cron job"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--branch"),'="": cron branch'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--id"),'="": cron id'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--name"),'="": cron name'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--schedule"),'="": cron schedule'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"info-6"}),"info"),(0,r.kt)("p",null,"display info about a cron job"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--id"),'="": cron id'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'),(0,r.kt)("h3",i({},{id:"ls-5"}),"ls"),(0,r.kt)("p",null,"list cron jobs"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--log-level"),'="": set logging level (default: info)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--repository, --repo"),'="": repository id or full-name (e.g. 134 or octocat/hello-world)'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--server, -s"),'="": server address'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"--token, -t"),'="": server auth token'))}b.isMDXComponent=!0}}]);